services:
  # Frontend - Next.js Application
  - type: web
    name: emergenttrader-frontend
    env: node
    plan: starter
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: emergenttrader-backend
          property: host
      - key: NEXT_PUBLIC_WS_URL
        fromService:
          type: web
          name: emergenttrader-backend
          property: host
    healthCheckPath: /
    
  # Backend - Python FastAPI Application
  - type: web
    name: emergenttrader-backend
    env: python
    plan: starter
    buildCommand: |
      cd python_backend &&
      pip install -r requirements.txt &&
      python -c "import nltk; nltk.download('punkt')" || true
    startCommand: cd python_backend && python main.py
    envVars:
      - key: PYTHON_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: emergenttrader-db
          property: connectionString
      - key: FRONTEND_URL
        fromService:
          type: web
          name: emergenttrader-frontend
          property: host
    healthCheckPath: /health
    
  # Scheduled Signal Generation Service
  - type: cron
    name: signal-generator-morning
    env: python
    schedule: "0 9 * * 1-5"  # 9 AM weekdays
    buildCommand: |
      cd python_backend &&
      pip install -r requirements.txt
    startCommand: cd python_backend && python scheduled_signal_generator.py --time=morning
    envVars:
      - key: PYTHON_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: emergenttrader-db
          property: connectionString
          
  - type: cron
    name: signal-generator-afternoon
    env: python
    schedule: "0 14 * * 1-5"  # 2 PM weekdays
    buildCommand: |
      cd python_backend &&
      pip install -r requirements.txt
    startCommand: cd python_backend && python scheduled_signal_generator.py --time=afternoon
    envVars:
      - key: PYTHON_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: emergenttrader-db
          property: connectionString
          
  - type: cron
    name: signal-generator-evening
    env: python
    schedule: "0 18 * * 1-5"  # 6 PM weekdays
    buildCommand: |
      cd python_backend &&
      pip install -r requirements.txt
    startCommand: cd python_backend && python scheduled_signal_generator.py --time=evening
    envVars:
      - key: PYTHON_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: emergenttrader-db
          property: connectionString

databases:
  - name: emergenttrader-db
    databaseName: emergenttrader
    user: emergenttrader_user
    plan: starter
